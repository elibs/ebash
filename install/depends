#!/bin/sh
#
# Copyright 2021, Marshall McMullen <marshall.mcmullen@gmail.com>
#
# This program is free software: you can redistribute it and/or modify it under the terms of the Apache License
# as published by the Apache Software Foundation, either version 2 of the License, or (at your option) any later
# version.

set -e

########################################################################################################################
####
#### WARNING: This script is meant to be runnable in any Linux OS including older ones which do not have bash installed.
####
#### DO NOT change the she-bang at the top to bash.
####
########################################################################################################################

#-----------------------------------------------------------------------------------------------------------------------
#
# Main
#
#-----------------------------------------------------------------------------------------------------------------------

UNAME="$(uname -s)"

if [ "${UNAME}" = "Darwin" ]; then
    DISTRO="darwin"
elif [ -e "/etc/os-release" ]; then
    DISTRO=$(awk -F'=' '/^ID=/ {print $2}' /etc/os-release | tr -d '"')
elif which lsb_release &>/dev/null; then
    DISTRO=$(lsb_release -is)
else
    DISTRO="${UNAME}"
fi

DISTRO=$(echo "${DISTRO}" | tr "[A-Z]" "[a-z]")

echo ">> Installing dependencies for ${DISTRO}"

export DEBIAN_FRONTEND=noninteractive

#----------------------------------------------------------------------------------------------------------------------
#
# Alpine
#
#----------------------------------------------------------------------------------------------------------------------
if [ "${DISTRO}" = "alpine" ]; then

    echo "http://dl-3.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories

    apk add                  \
        bash                 \
        coreutils            \
        curl                 \
        diffutils            \
        file                 \
        findutils            \
        gawk                 \
        grep                 \
        perl                 \
        procps               \
        sed                  \
        util-linux           \
        which                \

#----------------------------------------------------------------------------------------------------------------------
#
# Arch
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "arch" ]; then

    pacman -Syu --noconfirm --needed \
        curl                 \
        diffutils            \
        perl                 \
        which                \

#----------------------------------------------------------------------------------------------------------------------
#
# CentOS
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "centos" ]; then

    yum install epel-release -y

    yum install -y          \
        curl                \
        diffutils           \
        file                \
        perl                \
        which               \

#----------------------------------------------------------------------------------------------------------------------
#
# Debian
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "debian" ]; then

    apt update

    apt install -y          \
        bsdmainutils        \
        curl                \
        file                \
        lsb-release         \
        procps              \

#----------------------------------------------------------------------------------------------------------------------
#
# Fedora
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "fedora" ]; then

    dnf install -y          \
        curl                \
        diffutils           \
        file                \
        findutils           \
        perl-core           \
        procps              \
        which               \

#----------------------------------------------------------------------------------------------------------------------
#
# Gentoo
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "gentoo" ]; then

    # Nothing to install on gentoo as everything is included by default!
    true

#----------------------------------------------------------------------------------------------------------------------
#
# Rocky Linux
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "rocky" ]; then

    yum install epel-release -y

    yum install -y          \
        curl                \
        diffutils           \
        file                \
        perl                \
        procps              \
        which               \

#----------------------------------------------------------------------------------------------------------------------
#
# Ubuntu
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "ubuntu" ]; then

    apt update

    apt install -y          \
        bsdmainutils        \
        curl                \
        file                \

#----------------------------------------------------------------------------------------------------------------------
#
# MacOS
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "darwin" ]; then

    # We need to install homebrew if it isn't already installed to be able to install packages on MacOS
    if ! which brew &>/dev/null; then
        echo ">> Installing Homebrew"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi

    # Brew returns an error if you try to install a package that is already installed. The brew solution to this
    # is to use `brew bundle` which correctly handles this situation. The syntax is a line-delimited file where
    # each line is `brew "<package name>"`.
    brew bundle --file=- <<-EOF
		brew "bash"
		brew "coreutils"
		brew "findutils"
		brew "gawk"
		brew "gnu-sed"
		brew "gnu-tar"
		brew "gnu-which"
		brew "grep"
		EOF

#----------------------------------------------------------------------------------------------------------------------
#
# UNKNOWN
#
#----------------------------------------------------------------------------------------------------------------------
else
    echo "Unknown OS: ${DISTRO}"
    exit 1
fi

exit 0
