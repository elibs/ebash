#!/bin/sh

set -e

########################################################################################################################
####
#### WARNING: This script is meant to be runnable in any Linux OS including older ones which do not have bash installed.
####
#### DO NOT change the she-bang at the top to bash.
####
########################################################################################################################

#-----------------------------------------------------------------------------------------------------------------------
#
# Main
#
#-----------------------------------------------------------------------------------------------------------------------

UNAME="$(uname -s)"

if [ "${UNAME}" = "Darwin" ]; then
    DISTRO="darwin"
elif [ -e "/etc/os-release" ]; then
    DISTRO=$(awk -F'=' '/^ID=/ {print $2}' /etc/os-release | tr -d '"')
elif which lsb_release &>/dev/null; then
    DISTRO=$(lsb_release -is)
else
    DISTRO="${UNAME}"
fi

DISTRO=$(echo "${DISTRO}" | tr "[A-Z]" "[a-z]")

echo ">> Installing dependencies for ${DISTRO}"

#----------------------------------------------------------------------------------------------------------------------
#
# Alpine Linux
#
#----------------------------------------------------------------------------------------------------------------------
if [ "${DISTRO}" = "alpine" ]; then

    echo "http://dl-3.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories

    apk add              \
        bash             \
        bzip2            \
        cdrkit           \
        coreutils        \
        cpio             \
        curl             \
        debootstrap      \
        dialog           \
        diffutils        \
        file             \
        findutils        \
        gawk             \
        git              \
        gnupg            \
        grep             \
        gzip             \
        iproute2         \
        iputils          \
        jq               \
        ncurses          \
        ncurses-terminfo \
        net-tools        \
        perl             \
        procps           \
        pstree           \
        squashfs-tools   \
        util-linux       \
        xz

#----------------------------------------------------------------------------------------------------------------------
#
# Arch Linux
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "arch" ]; then

    #base-devel          \
    pacman -Sy --noconfirm  \
        cdrkit              \
        cpio                \
        debootstrap         \
        dialog              \
        diffutils           \
        gcc                 \
        git                 \
        jq                  \
        make                \
        net-tools           \
        squashfs-tools      \
        which

#----------------------------------------------------------------------------------------------------------------------
#
# CentOS
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "centos" ]; then

    VERSION=$(awk -F'[="]*' '/^VERSION_ID=/ {print $2}' /etc/os-release)

    yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-${VERSION}.noarch.rpm

    yum install -y          \
        bzip2               \
        cpio                \
        debootstrap         \
        dialog              \
        diffutils           \
        file                \
        genisoimage         \
        git                 \
        glibc               \
        gzip                \
        iproute             \
        iptables            \
        jq                  \
        ncurses             \
        net-tools           \
        perl                \
        psmisc              \
        squashfs-tools      \
        which               \
        xz

#----------------------------------------------------------------------------------------------------------------------
#
# Debian
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "debian" ]; then

    apt update

    apt install -y      \
        bsdmainutils    \
        bzip2           \
        cpio            \
        curl            \
        debootstrap     \
        dialog          \
        file            \
        genisoimage     \
        git             \
        iptables        \
        jq              \
        iproute2        \
        net-tools       \
        procps          \
        psmisc          \
        squashfs-tools  \
        xz-utils

#----------------------------------------------------------------------------------------------------------------------
#
# Fedora
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "fedora" ]; then

    dnf install -y          \
        bzip2               \
        cpio                \
        debootstrap         \
        dialog              \
        diffutils           \
        file                \
        findutils           \
        genisoimage         \
        git                 \
        glibc               \
        iproute             \
        iptables            \
        iputils             \
        jq                  \
        ncurses             \
        net-tools           \
        perl-core           \
        procps              \
        psmisc              \
        squashfs-tools      \
        which               \
        xz

#----------------------------------------------------------------------------------------------------------------------
#
# Gentoo
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "gentoo" ]; then

    emerge-webrsync

    emerge --autounmask-write --autounmask-continue --noreplace --quiet \
        cdrtools        \
        cpio            \
        debootstrap     \
        dev-vcs/git     \
        dialog          \
        jq              \
        net-tools       \
        squashfs-tools

#----------------------------------------------------------------------------------------------------------------------
#
# Ubuntu
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "ubuntu" ]; then

    apt update

    apt install -y      \
        bsdmainutils    \
        bzip2           \
        cgroup-lite     \
        cpio            \
        curl            \
        debootstrap     \
        dialog          \
        file            \
        git             \
        jq              \
        iproute2        \
        iptables        \
        iputils-ping    \
        mkisofs         \
        net-tools       \
        psmisc          \
        squashfs-tools  \
        xz-utils

#----------------------------------------------------------------------------------------------------------------------
#
# MacOS
#
#----------------------------------------------------------------------------------------------------------------------
elif [ "${DISTRO}" = "darwin" ]; then

    brew update-reset

    brew install    \
        bash        \
        curl        \
        coreutils   \
        findutils   \
        gnu-sed     \
        grep        \
        jq          \
        pstree

#----------------------------------------------------------------------------------------------------------------------
#
# UNKNOWN
#
#----------------------------------------------------------------------------------------------------------------------
else
    echo "Unknown OS: ${DISTRO}"
    exit 1
fi

exit 0
