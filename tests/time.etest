#!/usr/bin/env bash
#
# Copyright 2021, Marshall McMullen <marshall.mcmullen@gmail.com>
#
# This program is free software: you can redistribute it and/or modify it under the terms of the Apache License
# as published by the Apache Software Foundation, either version 2 of the License, or (at your option) any later
# version.

ETEST_time_duration()
{
    local start=15169
    local stop=18233
    local duration
    duration=$(time_duration "${start}" "${stop}")
    etestmsg "$(lval start stop duration)"

    assert_eq "00:51:04" "${duration}"
}

ETEST_time_duration_zero()
{
    local start=0
    local stop=0
    local duration
    duration=$(time_duration "${start}" "${stop}")
    etestmsg "$(lval start stop duration)"

    assert_eq "00:00:00" "${duration}"
}

ETEST_time_duration_seconds()
{
    local start=15169
    local stop=15170
    local duration
    duration=$(time_duration "${start}" "${stop}")
    etestmsg "$(lval start stop duration)"

    assert_eq "00:00:01" "${duration}"
}

ETEST_time_duration_minutes()
{
    local start=15170
    local stop=15570
    local duration
    duration=$(time_duration "${start}" "${stop}")
    etestmsg "$(lval start stop duration)"

    assert_eq "00:06:40" "${duration}"
}

ETEST_time_duration_hours()
{
    local start=15170
    local stop=55570
    local duration
    duration=$(time_duration "${start}" "${stop}")
    etestmsg "$(lval start stop duration)"

    assert_eq "11:13:20" "${duration}"
}

# Function to normalize seconds and milliseconds to avoid slight time delta false positive
normalize_time_stamp()
{
    sed 's|[0-9].[0-9][0-9][0-9]|0.000|'
}

# Function to normalize rfc3339 time to avoid slight time delta false positive
normalize_time_rfc3339()
{
    sed 's|[0-9]:[0-9][0-9]Z|0:00Z|'
}

ETEST_etimestamp_format()
{
    (
        ETIMESTAMP_FORMAT="StampMilli"
        expect="$(date '+%b %d %T.%3N' | normalize_time_stamp)"
        actual="$(etimestamp | normalize_time_stamp)"
        einfo "$(lval ETIMESTAMP_FORMAT expect actual)"
        assert_eq "${expect}" "${actual}"

        ETIMESTAMP_FORMAT="RFC3339"
        expect="$(date '+%FT%TZ' | normalize_time_rfc3339)"
        actual="$(etimestamp | normalize_time_rfc3339)"
        einfo "$(lval ETIMESTAMP_FORMAT expect actual)"
        assert_eq "${expect}" "${actual}"
    )
}
