name: Pipeline

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: '**'

# GLobal environment variables
env:
  TERM: "xterm-256color"
  COLUMNS: "120"
  EFUNCS_COLOR: "1"
  EINTERACTIVE: "1"

#----------------------------------------------------------------------------------------------------------------------
#
# Pipeline Jobs
#
#----------------------------------------------------------------------------------------------------------------------
jobs:

  #--------------------------------------------------------------------------------------------------------------------
  #
  # LINUX
  #
  #--------------------------------------------------------------------------------------------------------------------
  Linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        container:
          - "alpine:3.12"
          - "alpine:3.11"
          - "archlinux"
          - "centos:8"
          - "centos:7"
          - "debian:10"
          - "debian:9"
          - "fedora:33"
          - "fedora:32"
          - "gentoo/stage3"
          - "ubuntu:18.04"
          - "ubuntu:16.04"

    container:
      image: ${{ matrix.container }}
      options: --init --interactive --privileged --tty

    steps:
      - uses: actions/checkout@v2
      - run: echo "OSNAME=$(echo ${{ matrix.container }} | sed -e 's|:|-|' -e 's|/stage3||')" >> ${GITHUB_ENV}

      - name: Install Dependencies
        run: bin/ebash-install-deps

      - name: Lint
        run: bin/bashlint

      - name: Self Test
        run: bin/selftest

      - name: Test
        run: bin/etest --summary

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.OSNAME }}
          path: |
            etest.log
            etest.json

  #--------------------------------------------------------------------------------------------------------------------
  #
  # MacOS
  #
  #--------------------------------------------------------------------------------------------------------------------
  MacOS:
    strategy:
      matrix:
        os: ["11.0", "10.15"]
    runs-on: macos-${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: bin/ebash-install-deps

      - name: Lint
        run: bin/bashlint

      - name: Self Test
        run: bin/selftest

      - name: Test
        run: bin/etest --summary

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: macos-${{ matrix.os }}
          path: |
            etest.log
            etest.json
