name: "CI/CD"

# Controls when the action will run. Triggers the workflow on push or pull request events but only for the master branch
on:
  push:
    branches-ignore:
      - 'main'

# GLobal environment variables
env:
  TERM: "xterm-256color"
  COLUMNS: "120"
  EINTERACTIVE: "0"
  EFUNCS_COLOR: "1"
  COLOR_DEBUG: "dim blue"

#----------------------------------------------------------------------------------------------------------------------
#
# Pipeline Jobs
#
#----------------------------------------------------------------------------------------------------------------------
jobs:

  #--------------------------------------------------------------------------------------------------------------------
  #
  # LINUX
  #
  #--------------------------------------------------------------------------------------------------------------------
  Linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        container:
          - "alpine:3.15"
          - "alpine:3.14"
          - "archlinux"
          - "centos:8"
          - "centos:7"
          - "debian:10"
          - "debian:9"
          - "fedora:33"
          - "fedora:32"
          - "gentoo/stage3"
          - "rockylinux/rockylinux:8"
          - "ubuntu:20.04"
          - "ubuntu:18.04"

    container:
      image: ${{ matrix.container }}
      options: --init --interactive --privileged --tty

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: echo "OSNAME=$(echo ${{ matrix.container }} | sed -e 's|:|-|' -e 's|/stage3||' -e 's|rockylinux/||')" >> ${GITHUB_ENV}

      - name: Install Dependencies
        run: install/all

      - name: Lint
        run: bin/bashlint --severity=error

     #- name: Self Test
     #   run: bin/eretry bin/selftest

     # - name: Test
     #    run: bin/etest --work-dir .work/output --failfast --failures 5

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.OSNAME }}
          path: .work/**

  #--------------------------------------------------------------------------------------------------------------------
  #
  # MacOS
  #
  #--------------------------------------------------------------------------------------------------------------------
  MacOS:
    strategy:
      matrix:
        os: ["11.0", "10.15"]
    runs-on: macos-${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: install/all

      - name: Lint
        run: bin/bashlint --severity=error

    #- name: Self Test
    #    run: bin/eretry bin/selftest

    #  - name: Test
    #    run: bin/etest --work-dir .work/output --failfast --failures 5

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: macos-${{ matrix.os }}
          path: .work/**

  #--------------------------------------------------------------------------------------------------------------------
  #
  # Test Results
  #
  #--------------------------------------------------------------------------------------------------------------------
  test-results:
    name: "Tests Results"
    needs: [Linux, MacOS]
    runs-on: ubuntu-latest
    if: always() && github.ref != 'refs/heads/develop'

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Details
        run: find artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.6
        with:
          check_name: Publish Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: artifacts/**/etest.xml

  #--------------------------------------------------------------------------------------------------------------------
  #
  # Release
  #
  #--------------------------------------------------------------------------------------------------------------------
  release:
    name: "Release"
    needs: [Linux, MacOS]
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Version
        run: |
            # Setup Git so we can commit
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"

            # Increment and push new version
            bin/ebash cicd_create_next_version_tag --push

      - name: Release
        run: bin/ebash cicd_release
