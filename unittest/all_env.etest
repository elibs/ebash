#!/usr/bin/env bash
#
# Copyright 2011-2018, Marshall McMullen <marshall.mcmullen@gmail.com>
# Copyright 2011-2018, SolidFire, Inc. All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it under the terms of the Apache License
# as published by the Apache Software Foundation, either version 2 of the License, or (at your option) any later
# version.

# Verify all required commands are installed
ETEST_commands()
{
    local commands=(
        # Put which first so we can ensure we can use it to check for other commands
        "which"

        # Everything else
        "awk"
        "base64"
        "bash"
        "curl"
        "diff"
        "file"
        "find"
        "git"
        "grep"
        "jq"
        "perl"
        "pgrep"
        "ping"
        "ps"
        "readlink"
        "tar"
        "tac"
        "tput"
    )

    # Additional commands required for Linux only
    if os linux; then
        commands+=(
            "bzip2|lbzip2|pbzip2"
            "column"
            "cpio"
            "debootstrap"
            "dialog"
            "gzip|pigz"
            "ip"
            "iptables"
            "lzma|xz"
            "mkisofs|genisoimage|xorrisofs"
            "mksquashfs"
            "mount"
            "netstat"
            "pstree"
        )
    fi

    array_sort --unique commands

    for entry in "${commands[@]}"; do
        einfos "${entry}"
        array_init choices "${entry}" "|"

        local found=0
        for cmd in "${choices[@]}"; do
            if command_exists "${cmd}"; then

                # Busybox versions are invalid as they are neutered of full functionality that we require
                if [[ "$(basename $(readlink -m $(which ${cmd})))" == "busybox" && "${cmd}" != "which" ]]; then
                    ewarn "Command '$(which ${cmd})' invalid (busybox)"
                    continue
                fi

                found=1
                break
            fi
        done

        assert_eq "1" "${found}" "Command '${entry}' not found"
    done
}

